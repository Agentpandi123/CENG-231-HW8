Implemented  the server and client so that they would work together and create the images.  Followed the instructions in the assignment and it explained the process of what to do.  

Extra Credit:
To enable the PhotoLab server to handle multiple clients concurrently, two commonly used techniques are multi-threading and asynchronous I/O. In the multi-threading approach, each client connection is assigned to a separate thread. The server is modified to create a thread pool, a collection of pre-created threads that can be reused. When a client connects, the server checks for an available thread in the pool and assigns it to handle the client connection. If no thread is available, the server waits until one becomes free. Access to shared resources, such as data structures, must be properly synchronized to prevent race conditions. Each thread handles a specific client connection independently, performing necessary operations and responding to client requests. The responses, along with any errors or exceptions, are logged to the "client.txt" file.

Alternatively, the asynchronous I/O approach utilizes non-blocking I/O operations and an event-driven architecture. Instead of creating separate threads for each client, the server employs an event loop to manage and process I/O events from multiple clients. The server code is refactored to use an event-driven design, where it waits for events rather than blocking on individual client connections. Asynchronous I/O operations, such as asynchronous sockets or non-blocking I/O, handle client connections without blocking the server's execution. Event handlers are implemented to respond to events such as new client connections, incoming data, and completed requests. When a client connection is established or data is received, the corresponding event handler is triggered to process the request and generate a response. The server keeps track of the state of each client connection and handles requests accordingly. The responses and any encountered errors or exceptions are logged to the "client.txt" file.

Both techniques have their advantages and considerations, and the choice depends on factors like the expected number of clients, the workload nature, and application requirements.
